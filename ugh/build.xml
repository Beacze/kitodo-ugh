<?xml version="1.0"?>
<project name="Goobi" default="dist" xmlns:artifact="urn:maven-artifact-ant">

	<!-- Distribution specific settings. -->
	<property name="dist.name" value="UGH" />
	<property name="svn_user" value="user" />
	<property name="svn_password" value="password" />

	<!-- Directory settings -->
	<property name="dir.lib" value="./lib" />
	<property name="dir.build" location="./build" />
	<property name="dir.build.src" location="${dir.build}/src" />
	<property name="dir.src" location="./src" />
	<!-- Check Versions? Disable only for development! -->
	<!-- Comment the property decleration out, since stupid ant isn't checking the the value. -->
	<property name="check.versions" value="true" />



	<target name="find_revision" description="Sets property 'svn.info.lastRev' to head svn revision">
		<path id="svnant.libs.path">
			<fileset dir="revision" includes="**/*.jar" />
		</path>
		<!-- Load SvnAnt -->
		<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.libs.path" />

		<!-- find head revision number, amongst other things. -->
		<!-- Replace svn_username and svn_password with values appropriate to your system -->
		<svn username="${svn_user}" password="${svn_password}" javahl="false" failonerror="false">
			<info target="." />
		</svn>

		<!-- Display svn revision number -->
		<property name="dist.revision" value="${svn.info.lastRev}" />
	</target>

	<path id="classpath">
		<fileset dir="${dir.lib}" />
	</path>


	<!-- Clean up generated and compiled files. -->
	<target name="clean" description="Clean up generated and compiled files.">
		<delete dir="${dir.build}" />
	</target>

	<!-- Create needed directories -->
	<target name="createDirs" description="Create needed directories">
		<mkdir dir="${dir.build}" />
		<property name="dir.build.classes" value="${dir.build}/classes" />
		<mkdir dir="${dir.build.classes}" />
		<mkdir dir="${dir.build.src}" />
	</target>








	<!-- copy sources to build directory -->
	<target name="copySources" description="Copy the sources to the build directory">
		<copy todir="${dir.build.src}">
			<fileset dir="${dir.src}" />
		</copy>
	</target>

	<!-- Normal build of application. 
	<target name="compile" depends="writeVersion" description="Normal build of application.">
	-->
	<target name="compile" depends="copySources, createDirs, writeVersion" description="Normal build of application.">

		<javac srcdir="${dir.build.src}" destdir="${dir.build.classes}" target="1.5" encoding="UTF8" debug="false">
			<compilerarg value="-Xlint" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<!-- Build of war file. -->
	<target name="jar" depends="compile" description="Build of war file.">
		<jar destfile="${dir.build}/ugh.jar" basedir="${dir.build.classes}">
		</jar>
		<delete dir="${dir.build}/src" />
		<delete dir="${dir.build}/classes" />
		<!--
		<delete>
			<fileset dir="${dir.build}">
				<exclude name="ugh.jar" />
				<patternset>
					<include name="**/*.*" />
				</patternset>
			</fileset>
		</delete>
		-->
	</target>


	<!-- Build single war file. -->
	<target name="dist" depends="clean, jar" description="Build single war file.">
		<echo>Alles ist gut</echo>
	</target>

	<!-- Build all, not really needed yet. -->
	<target name="all" depends="dist" description="Build all, not really needed yet." />

	<!-- rewrite the Version file with informations from the build system, not used yet-->
	<target name="writeVersion" depends="find_revision" description="writes the build version">
		<tstamp>
			<format property="date" pattern="dd−MMMM−yyyy" locale="en" />
		</tstamp>
		<echo file="${dir.build.src}/ugh/Version.java">
			package ugh;

			/*
			DO NOT CHANGE THIS FILE, IT'S GENERATED BY ANT!
			 */
			public class Version {
				public final static String VERSION = "${dist.name}";
				public final static String BUILDVERSION = "${dist.name}-${dist.revision}";
				public final static String BUILDDATE = "${date}";
			}
		</echo>
	</target>

</project>